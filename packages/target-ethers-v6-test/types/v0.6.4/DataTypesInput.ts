/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumberish, Interface } from "ethers";
import type { ContractRunner } from "ethers/providers";
import type { TypedEventFilter, TypedEvent, PromiseOrValue } from "../common";

export declare namespace StructsLib1 {
  export type InfoStruct = {
    a: PromiseOrValue<BigNumberish>;
    b: PromiseOrValue<BigNumberish>;
  };

  export type InfoStructOutput = [bigint, bigint] & { a: bigint; b: bigint };
}

export declare namespace StructsLib2 {
  export type InfoStruct = {
    a: PromiseOrValue<string>;
    b: PromiseOrValue<string>;
  };

  export type InfoStructOutput = [string, string] & { a: string; b: string };
}

export declare namespace DataTypesInput {
  export type Struct1Struct = {
    uint256_0: PromiseOrValue<BigNumberish>;
    uint256_1: PromiseOrValue<BigNumberish>;
  };

  export type Struct1StructOutput = [bigint, bigint] & {
    uint256_0: bigint;
    uint256_1: bigint;
  };

  export type Struct2Struct = {
    input1: PromiseOrValue<BigNumberish>;
    input2: DataTypesInput.Struct1Struct;
  };

  export type Struct2StructOutput = [
    bigint,
    DataTypesInput.Struct1StructOutput
  ] & { input1: bigint; input2: DataTypesInput.Struct1StructOutput };

  export type Struct3Struct = { input1: PromiseOrValue<BigNumberish>[] };

  export type Struct3StructOutput = [bigint[]] & { input1: bigint[] };
}

export interface DataTypesInputInterface extends Interface {}

export interface DataTypesInput extends BaseContract {
  connect(runner: null | ContractRunner): this;

  interface: DataTypesInputInterface;
}
