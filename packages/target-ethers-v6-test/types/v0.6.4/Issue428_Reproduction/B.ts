/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, Interface, LogDescription } from "ethers";
import type { ContractRunner } from "ethers/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  PromiseOrValue,
} from "../../common";

export interface BInterface extends Interface {}

export interface Committed_uint256_EventObject {
  timelock: bigint;
}
export type Committed_uint256_Event = TypedEvent<
  [bigint],
  Committed_uint256_EventObject
> &
  LogDescription;

export type Committed_uint256_EventFilter =
  TypedEventFilter<Committed_uint256_Event>;

export interface Committed_address_array_EventObject {
  whitelist: string[];
}
export type Committed_address_array_Event = TypedEvent<
  [string[]],
  Committed_address_array_EventObject
> &
  LogDescription;

export type Committed_address_array_EventFilter =
  TypedEventFilter<Committed_address_array_Event>;

export interface B extends BaseContract {
  connect(runner: null | ContractRunner): this;

  interface: BInterface;
}
