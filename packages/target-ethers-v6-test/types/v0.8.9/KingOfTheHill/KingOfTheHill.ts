/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  Interface,
  LogDescription,
} from "ethers";
import type { ContractRunner } from "ethers/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  PromiseOrValue,
} from "../../common";

export declare namespace KingOfTheHill {
  export type BidStruct = {
    bidder: PromiseOrValue<string>;
    value: PromiseOrValue<BigNumberish>;
  };

  export type BidStructOutput = [string, bigint] & {
    bidder: string;
    value: bigint;
  };
}

export interface KingOfTheHillInterface extends Interface {}

export interface HighestBidIncreasedEventObject {
  bid: KingOfTheHill.BidStructOutput;
}
export type HighestBidIncreasedEvent = TypedEvent<
  [KingOfTheHill.BidStructOutput],
  HighestBidIncreasedEventObject
> &
  LogDescription;

export type HighestBidIncreasedEventFilter =
  TypedEventFilter<HighestBidIncreasedEvent>;

export interface KingOfTheHill extends BaseContract {
  connect(runner: null | ContractRunner): this;

  interface: KingOfTheHillInterface;
}
